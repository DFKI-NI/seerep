name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # builds the docker image if the corresponding files changed
  build-docker:
    # run on ubuntu
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      # check if Dockerfile has changed
      - name: Get changed files
        id: changed-files-specific-docker-base
        uses: tj-actions/changed-files@v8.1
        with:
          files: |
            docker/base/Dockerfile
      - name: Get changed files
        id: changed-files-specific-docker-dev
        uses: tj-actions/changed-files@v8.1
        with:
          files: |
            docker/base/Dockerfile
            docker/dev/Dockerfile
      -
        name: Set up Docker Buildx
        if: steps.changed-files-specific-docker-dev.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Container Registry
        if: steps.changed-files-specific-docker-dev.outputs.any_changed == 'true'
        uses: docker/login-action@v1
        with:
          registry: git.ni.dfki.de:5050/agrigaia/seerep
          username: ${{ secrets.GITLAB_REGISTRY_USER }}
          password: ${{ secrets.GITLAB_REGISTRY_ACCESS_TOKEN }}
      -
        name: Build and push base image
        if: steps.changed-files-specific-docker-base.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          file: docker/base/Dockerfile
          push: ${{ GitHub.event_name != 'pull_request'}}
          tags: git.ni.dfki.de:5050/agrigaia/seerep/base:latest
          cache-from: type=registry,ref=git.ni.dfki.de:5050/agrigaia/seerep/base:latest
          cache-to: type=inline
      -
        name: Build and push dev image
        if: steps.changed-files-specific-docker-dev.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          file: docker/dev/Dockerfile
          push: ${{ GitHub.event_name != 'pull_request'}}
          tags: git.ni.dfki.de:5050/agrigaia/seerep/dev:latest
          cache-from: type=registry,ref=git.ni.dfki.de:5050/agrigaia/seerep/dev:latest
          cache-to: type=inline

  # builds the code
  build:
    needs: build-docker
    # run in docker container on ubuntu
    runs-on: ubuntu-20.04
    container:
      image: git.ni.dfki.de:5050/agrigaia/seerep/dev:latest
      options: --user docker --workdir /home/docker
      credentials:
        username: ${{ secrets.GITLAB_REGISTRY_USER }}
        password: ${{ secrets.GITLAB_REGISTRY_ACCESS_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Move the code in a "src" folder for catkin build
      - name: Move code to src folder
        run: |
          shopt -s dotglob
          mkdir $GITHUB_WORKSPACE/../tmp
          mv $GITHUB_WORKSPACE/* $GITHUB_WORKSPACE/../tmp/
          mkdir -p $GITHUB_WORKSPACE/src/seerep
          mv $GITHUB_WORKSPACE/../tmp/* $GITHUB_WORKSPACE/src/seerep/
        shell: bash

      #build workspace
      - name: Build the ros workspace
        run: |
          source /opt/ros/noetic/setup.bash
          catkin build --workspace $GITHUB_WORKSPACE/
        shell: bash

      #pre-commit checks
      - name: run pre-commit tests
        run: |
          source /opt/ros/noetic/setup.bash
          source $GITHUB_WORKSPACE/devel/setup.bash
          cd $GITHUB_WORKSPACE/src/seerep; pre-commit run -a
        shell: bash

  build-docker-deployment:
    # run on ubuntu
    runs-on: ubuntu-20.04
    if: ${{ GitHub.event_name != 'pull_request'}}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: git.ni.dfki.de:5050/agrigaia/seerep
          username: ${{ secrets.GITLAB_REGISTRY_USER }}
          password: ${{ secrets.GITLAB_REGISTRY_ACCESS_TOKEN }}
      -
        name: Build and push server image
        uses: docker/build-push-action@v2
        with:
          file: docker/server/Dockerfile
          push: ${{ GitHub.event_name != 'pull_request'}}
          tags: git.ni.dfki.de:5050/agrigaia/seerep/server:latest
          cache-from: type=registry,ref=git.ni.dfki.de:5050/agrigaia/seerep/server:latest
          cache-to: type=inline
